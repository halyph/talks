{
  "title": "Swagger Annotations (JAX-RS) - 3",
  "cells": [
    {
      "type": "markdown",
      "data": "```java\n   private final String API_NOTES =\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. \"\n            + \"Proin porta ex orci, non elementum augue aliquet sed. \"\n            + \"Quisque rhoncus tincidunt tortor eu dapibus. Cras aliquam augue imperdiet nibh sagittis molestie. \" +\n            \"Proin risus tortor, sodales sit amet blandit ac, vehicula vitae justo.\\n\\n\" +\n            \"## Proin risus tortor\\n\\n\" +\n            \"Lorem _ipsum_ **dolor** sit amet, consectetur adipiscing elit.\\n\\n\" +\n            \"> Some cool quote\\n\\n\" +\n            \"|Sit amet | Lorem dolor | Cosectetur elit|\\n\" +\n            \"|-------|------|------|\\n\" +\n            \"|`ipsum` | augue | SAGGITTIS |\\n\" +\n            \"|`dolor` | augue | SAGGITTIS |\\n\" +\n            \"|`amet+adipiscing`| augue | SAGGITTIS |\\n\" +\n            \"|`imperdiet` | augue | SAGGITTIS  |\\n\" +\n            \"|`dapibus` | augue | SAGGITTIS |\\n\" +\n            \"|`aliquam` | augue | SAGGITTIS |\\n\" +\n            \"|`nibh` | augue | SAGGITTIS |\\n\" +\n            \"|`risus` | augue | SAGGITTIS |\\n\" +\n            \"|`blandit` | augue | — |\\n\" +\n            \"|`nibh` | tortor | — |\";\n\n    @GET\n    @Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})\n    @ApiOperation(value = \"Get data\",\n            notes = API_NOTES)\n    @ApiResponses(value = {\n            @ApiResponse(code = 200, message = \"Success\", response = AstronomyDataByGeoCodeModel.class, responseContainer = \"List\"),\n            @ApiResponse(code = 204, message = \"No Data Available - empty array\"),\n            @ApiResponse(code = 400, message = \"Bad Request\"),\n            @ApiResponse(code = 401, message = \"Unauthorized - API operation not allowed for this api key\"),\n            @ApiResponse(code = 403, message = \"Forbidden\"),\n            @ApiResponse(code = 404, message = \"Not Found\"),\n            @ApiResponse(code = 500, message = \"Internal Server Error\"),\n            @ApiResponse(code = 501, message = \"Not Implemented\"),\n            @ApiResponse(code = 502, message = \"Bad Gateway\"),\n            @ApiResponse(code = 503, message = \"Service Unavailable\"),\n            @ApiResponse(code = 504, message = \"Gateway Timeout\"),\n    })\n    public Response getAstronomyDataByLatLon(\n            @Context final Variant responseVariant,\n\n            @ApiParam(value = \"The format of the response (json)\",\n                    required = false, allowableValues = \"json, xml\",\n                    example = \"json\")\n            @QueryParam(\"format\") final String format,\n\n            @ApiParam(value = \"Unit of Measure\",\n                    required = false, allowableValues = \"e, m, h, s\",\n                    example = \"m\")\n            @QueryParam(\"units\") final UnitsOfMeasureType unitsOfMeasure,\n\n            @ApiParam(value = \"Date parameter is used to call a single day of historical data.\\n\" +\n                    \"Dates shall use ISO 8601 standards\",\n                    required = true,\n                    example = \"20160420\")\n            @QueryParam(\"date\") final String date,\n\n            @ApiParam(value = \"Days parameter is used for incrementation of data usually in conjunction with dates or using current system date.\",\n                    example = \"2\",\n                    required = true)\n            @QueryParam(\"days\") final Integer numDays,\n\n            @ApiParam(value = \"Comp uses valid latitudes and longitude coordinates to identify locations worldwide.  Uses WGS84 geocode coordinate reference system. https://www.w3.org/2003/01/geo/\\n\" +\n                    \"33.40,83.19 is the manner in which a latitude and longitude is accepted for the weather APIs.\",\n                    required = true,\n                    example = \"34.063,-84.217\")\n            @QueryParam(\"geocode\") final GeoCode geocode) {\n\n      ...\n\n        return buildResponseOk(responseVariant, result);\n    }\n\n```"
    }
  ]
}